from aiogram import  types
import aiogram
from aiogram import Router
from aiogram import F
from aiogram.fsm.context import FSMContext
import random
from keyboards import inline
from keyboards import reply
from handlers.source.texts import start_message,download_prompts,get_id_prompts,help_text,about_text
from keyboards.inline import escape_keyboard, start_keyboard, escape_keyboard_caption
from aiogram.types import FSInputFile
from states import Download,ID


callback_router = Router()


@callback_router.callback_query(F.data == "download_pressed")
async def handle_download(callback: aiogram.types.CallbackQuery,state: FSMContext):
    await callback.answer("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...")
    await callback.message.delete()
    photo = FSInputFile("SRC/download4.png")
    await callback.message.answer_photo(photo,caption=download_prompts,parse_mode="HTML",reply_markup=escape_keyboard_caption)
    await state.set_state(Download.wait_link)


@callback_router.callback_query(F.data == "id_pressed")
async def handle_id(callback: aiogram.types.CallbackQuery,state: FSMContext):
    await callback.answer("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...")
    await callback.message.delete()
    await callback.message.answer(text=get_id_prompts,parse_mode="HTML",reply_markup=escape_keyboard)
    await state.set_state(ID.wait_id)

@callback_router.callback_query(F.data == "escape_pressed")
async def handle_cancel(callback: aiogram.types.CallbackQuery,state: FSMContext):
    await callback.answer("–í–æ–∑–≤—Ä–∞—â–∞—é...")
    await callback.message.edit_text(text=start_message(callback.from_user),parse_mode="HTML",reply_markup=start_keyboard)
    await state.clear()
@callback_router.callback_query(F.data == "escape_caption_pressed")
async def handle_caption_cancel(callback: aiogram.types.CallbackQuery,state:FSMContext):
    await callback.answer("–í–æ–∑–≤—Ä–∞—â–∞—é...")
    await callback.message.delete()
    photo = FSInputFile("SRC/start2.jpg")
    await callback.message.answer_photo(photo,caption=start_message(callback.from_user), parse_mode="HTML",reply_markup=start_keyboard)
    await state.clear()


@callback_router.callback_query(F.data == "help_pressed")
async def handle_help(callback: aiogram.types.CallbackQuery):
    await callback.answer("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...")
    await callback.message.delete()
    await callback.message.answer(text=help_text,parse_mode="HTML",reply_markup=inline.escape_keyboard)

@callback_router.callback_query(F.data == "about_pressed")
async def handle_about(callback: aiogram.types.CallbackQuery):
    await callback.answer("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...")
    await callback.message.delete()
    await callback.message.answer(text=about_text,parse_mode="HTML",reply_markup=escape_keyboard)

@callback_router.callback_query(F.data == "mp3",Download.wait_format)
async def handler_mp3(callback: aiogram.types.CallbackQuery,state: FSMContext):
    text_mp3 = """
    üîÑ <b>–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤ MP3...</b>

    –í–∞—à –∞—É–¥–∏–æ—Ñ–∞–π–ª –≥–æ—Ç–æ–≤–∏—Ç—Å—è! –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç 15-30 —Å–µ–∫—É–Ω–¥.

    üìå <i>–ü–æ–∫–∞ –∂–¥–µ—Ç–µ:</i>
    ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
    ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å –≤ —Å—Ç–∞–±–∏–ª—å–Ω–æ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏

    –°—Ç–∞—Ç—É—Å: <code>–ò–∑–≤–ª–µ–∫–∞–µ–º –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫—É...</code>
    """
    await callback.answer("–ì–æ—Ç–æ–≤–ª—é —Ñ–∞–π–ª...")
    await callback.message.answer(text=text_mp3,parse_mode="HTML")
    await state.set_state(Download.wait_file)

@callback_router.callback_query(F.data == "mp4",Download.wait_format)
async def handler_mp4(callback: aiogram.types.CallbackQuery,state: FSMContext):
    text_mp4 = """
        üîÑ <b>–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤ MP4...</b>

        –í–∞—à –≤–∏–¥–µ–æ—Ñ–∞–π–ª –≥–æ—Ç–æ–≤–∏—Ç—Å—è! –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç 15-30 —Å–µ–∫—É–Ω–¥.

        üìå <i>–ü–æ–∫–∞ –∂–¥–µ—Ç–µ:</i>
        ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
        ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å –≤ —Å—Ç–∞–±–∏–ª—å–Ω–æ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏

        –°—Ç–∞—Ç—É—Å: <code>–ò–∑–≤–ª–µ–∫–∞–µ–º –≤–∏–¥–µ–æ–¥–æ—Ä–æ–∂–∫—É...</code>
        """
    await callback.answer("–ì–æ—Ç–æ–≤–ª—é —Ñ–∞–π–ª...")
    await callback.message.answer(text=text_mp4, parse_mode="HTML")
    await state.set_state(Download.wait_file)
